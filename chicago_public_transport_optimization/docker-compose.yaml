#
# This docker-compose file starts and runs:
# * A 3-node kafka cluster
# * A 1-zookeeper ensemble
# * Schema Registry
# * Kafka REST Proxy
# * Kafka Connect
#

version: '2'

services:
  zookeeper:
      image: confluentinc/cp-zookeeper:5.4.0
      hostname: zookeeper
      container_name: zookeeper
      ports:
        - "2181:2181"
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.4.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - zookeeper
      - kafka0
      - schema-registry
      - connect
      - ksql
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka0:19092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_KSQL_URL: "http://ksql:8088"
      CONTROL_CENTER_KSQL_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://localhost:8085"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  kafka0:
    image: confluentinc/cp-kafka:5.4.0
    ports:
    - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka0:19092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
    depends_on:
    - "zookeeper"

  schema-registry:
    image: confluentinc/cp-schema-registry:5.4.0
    ports:
    - "8085:8085"
    hostname: schema-registry
    container_name: schema-registry
    environment:
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8085
      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: "PLAIN"
    depends_on:
    - "zookeeper"
    - "kafka0"

  rest-proxy:
    image: confluentinc/cp-kafka-rest:5.4.0
    ports:
    - "8082:8082"
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka0:19092"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082/"
      KAFKA_REST_HOST_NAME: "rest-proxy"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8085/"
    depends_on:
    - "kafka0"
    - "schema-registry"
    - "zookeeper"

  connect:
    image: confluentinc/cp-kafka-connect:5.4.0
    ports:
    - "8083:8083"
    hostname: connect
    container_name: connect
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka0:19092"
      CONNECT_GROUP_ID: "connect"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_PLUGIN_PATH: "/usr/share/java"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8085"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8085"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-config"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offset"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_REST_PORT: 8083
    depends_on:
    - "schema-registry"

  ksql:
    image: confluentinc/cp-ksql-server:5.4.0
    ports:
    - "8088:8088"
    environment:
      KSQL_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka0:19092"
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_KSQL_SERVICE_ID: "ksql_service_docker"
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8085/"
    depends_on:
    - "kafka0"
    - "schema-registry"

  ksql-cli:
    image: confluentinc/cp-ksql-cli:5.4.0
    container_name: ksql-cli
    depends_on:
      - "kafka0"
      - "connect"
      - "ksql"
    entrypoint: /bin/sh
    tty: true

  postgres:
    container_name: postgres
    image: postgres:11
    ports:
    - "5432:5432"
    environment:
      POSTGRES_USER: "cta_admin"
      POSTGRES_PASSWORD: "chicago"
      POSTGRES_DB: "cta"
    volumes:
    - ./producers/data/cta_stations.csv:/tmp/cta_stations.csv
    - ./load_stations.sql:/docker-entrypoint-initdb.d/load_stations.sql

  # connect-ui:
  #   image: landoop/kafka-connect-ui:0.9.7
  #   ports:
  #   - "8084:8084"
  #   environment:
  #     PORT: "8084"
  #     PROXY: "true"
  #     CONNECT_URL: "http://connect:8083"
  #   depends_on:
  #   - "connect"

  # topics-ui:
  #   image: landoop/kafka-topics-ui:0.9.4
  #   ports:
  #   - "8085:8085"
  #   environment:
  #     PORT: "8085"
  #     PROXY: "true"
  #     KAFKA_REST_PROXY_URL: "http://rest-proxy:8082"
  #   depends_on:
  #   - "rest-proxy"

  # schema-registry-ui:
  #   image: landoop/schema-registry-ui:0.9.5
  #   ports:
  #   - "8086:8086"
  #   environment:
  #     PORT: "8086"
  #     PROXY: "true"
  #     SCHEMAREGISTRY_URL: "http://schema-registry:8081/"
  #   depends_on:
  #   - "schema-registry"


